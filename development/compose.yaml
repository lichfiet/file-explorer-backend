
services:

  # Rabbit
  # - Queues get created by the backend
  # - Services use the queues to communicate
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  # Redis
  # - Caches thumbnail URLs
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: "" 
      REDIS_PORT: "6379"

  # Thumbnailer
  # - Generates thumbnails for images
  thumbnailer:
    depends_on:
      - rabbitmq
    image: lichfiet/file-explorer-thumbnailer:latest
    container_name: thumbnailer
    ports:
      - "8441:8441"
    environment:
      ENVIRONMENT: "development"
      PORT: "8441"
      RABBITMQ_HOST: "rabbitmq"
      AWS_REGION: "${AWS_REGION}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_S3_BUCKET: "file-explorer-s3-bucket"
      THUMBNAIL_FILES_LOCATION: "/usr/file/"
      REDIS_HOST: "redis"

  # Backend
  # - Handles s3 communication, triggers thumbnailer, etc
  backend:
    image: file-explorer-backend:dev
    container_name: backend
    depends_on:
      - redis
      - rabbitmq
    ports:
      - "8443:8443"
    volumes:
      - ../src/:/usr/app/src/
      - ../package.json:/usr/app/package.json
      - ../package-lock.json:/usr/app/package-lock.json
    environment:
      APP_NAME: "file-explorer-backend"
      PORT: "8443"
      LOG_LEVEL: "debug"
      RABBITMQ_HOST: "rabbitmq"
      AWS_REGION: "${AWS_REGION}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_S3_BUCKET: "file-explorer-s3-bucket"
      REDIS_HOST: "redis"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://localhost:4317"

#   minio:
#     image: minio/minio
#     container_name: minio
#     environment:
#       MINIO_ROOT_USER: minio
#       MINIO_ROOT_PASSWORD: password
#     volumes:
#       - ../minio:/minio-image/storage
#     ports:
#         - "9000:9000"
#         - "9001:9001"
#     command: server /minio-image/storage --console-address :9001
#     entrypoint: >
# #       /bin/sh -c "
# #         /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
# #         /usr/bin/mc mb myminio/mybucket;
# #         /usr/bin/mc policy set download myminio/mybucket;
# #         exec /usr/bin/minio server /data"

# volumes:
#   minio-data:
